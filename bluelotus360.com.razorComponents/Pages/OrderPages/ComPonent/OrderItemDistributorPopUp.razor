<MudDialog @bind-IsVisible="@IsEditPopShown">

    <TitleContent>
        <MudText Typo="Typo.h6" Class="dc1">
            <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3 mb-n1" />
            @HeadingPopUp
        </MudText>
    </TitleContent>
    <DialogContent>

        <MudList Clickable="false">
            @foreach (var item in Validaor.UserMessages.UserMessages)
            {
                <MudListItem Style="Color:darkred" Text="@item.Message" Icon="@Icons.Material.Filled.Error" />
            }
        </MudList>
        @{
            var addBtn = ModalUIElement.Children.Where(x => x._internalElementName != null && x._internalElementName.Equals("AddItemToGrod")).FirstOrDefault();
            var cancelBtn = ModalUIElement.Children.Where(x => x._internalElementName != null && x._internalElementName.Equals("CancelItemPopup")).FirstOrDefault();

            if (addBtn != null && cancelBtn != null)
            {
                ModalUIElement.Children.Remove(addBtn);
                ModalUIElement.Children.Remove(cancelBtn);

            }
        }
        @if (ModalUIElement != null)
        {
            <UIRenderere FromSection="ModalUIElement" DataObject="OrderItem" InteractionLogics="InteractionLogics" ObjectHelpers="ObjectHelpers" />
        }
        <hr />
        <div class="d-flex justify-content-end align-items-center">
            <MudButton OnClick="Cancel" Variant="Variant.Filled" Class="mr-2">Cancel</MudButton>
            <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="AddItem">@ButtonName</MudButton>
        </div>

    </DialogContent>

</MudDialog>

